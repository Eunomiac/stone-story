// === KEY REFERENCE ===

// leftBegin        A or ←
// rightBegin        D or →
// upBegin            W or ↑
// downBegin        S or ↓
// primaryBegin        LMB, Return
// backBegin        X
// ability1Begin    Shift
// ability2Begin    Control
// bumpLBegin        Z
// bumpRBegin        C

var U = import Utilities
var toSecs = U.toSeconds(30)

func Init()
  ?!storage.Has("staffSpeed")
    storage.Set("staffSpeed", true)
  ?!storage.Has("hideHUD")
    storage.Set("hideHUD", false)
  ?!storage.Has("skeletonArm")
    storage.Set("skeletonArm", true)

func Set(key, val)
  storage.Set(key, val)
  return val

func Get(key)
  return storage.Get(key)

func Toggle(key)
  storage.Set(key, !storage.Get(key))
  return storage.Get(key)
  
func Cycle(key, vals)
  var curVal = storage.Get(key)
  var index = vals.IndexOf(curVal)
  ?index = vals.Count()
    storage.Set(key, vals[0])
  :
    storage.Set(key, vals[index])
   

func printRight(lNum, color, message, minSize)
  message = message + ""
  var xRight = 87
  var mSize = string.Size(message)
  ?minSize > mSize
    mSize = minSize
  var xStart = xRight - mSize
  >`@xStart@,@lNum@,@color@,@message@
  

func Display()
  // === HUD Info Display ===
  var xStart = 0
  var yStart = 6
  var lineNum = yStart
  var rightYStart = 0
  var rightLineNum = rightYStart
  
  ?storage.Get("hideHUD")
    printRight(rightLineNum,"#FF0000","[Z] HUD", 0)
    return
  :
    printRight(rightLineNum,"#FF0000","[Z] HUD", 16)
    rightLineNum++

  ?storage.Get("staffSpeed")
    printRight(rightLineNum,"#00FF00","[S] Speed", 16)
    rightLineNum++
  :
    printRight(rightLineNum,"#FF0000","[S] Speed", 16)
    rightLineNum++

  ?storage.Get("skeletonArm")
    printRight(rightLineNum,"#00FF00","[A] Skeleton Arm", 16)
    rightLineNum++
  :
    printRight(rightLineNum,"#FF0000","[A] Skeleton Arm", 16)
    rightLineNum++

  rightLineNum++

  ?storage.Get("mainWeapon")
    printRight(rightLineNum, "#00FFFF", string.Join("", [" <",storage.Get("mainWeapon"),"> "]), 20)
    rightLineNum++
    
  ?storage.Get("mainShield")
    printRight(rightLineNum, "#0000FF", string.Join("", ["[",storage.Get("mainShield"),"]"]), 20)
    rightLineNum++

  ?storage.Get("mainRanged")
    printRight(rightLineNum, "#00FFFF", string.Join("", ["> ",storage.Get("mainRanged")," <"]), 20)
    rightLineNum++
  
  ?storage.Get("twoHandedOverride")
    printRight(rightLineNum, "#FF00FF", string.Join("", ["<<",storage.Get("twoHandedOverride"),">>"]), 30)
    rightLineNum++
  :
    ?storage.Get("weaponOverride")
      printRight(rightLineNum, "#FF00FF", string.Join("", [" <",storage.Get("weaponOverride"),"> "]), 30)
      rightLineNum++
    ?storage.Get("shieldOverride")
      printRight(rightLineNum, "#00FFFF", string.Join("", ["[",storage.Get("shieldOverride"),"]"]), 30)
      rightLineNum++
      
  rightLineNum++
  
  printRight(rightLineNum, "#FF00FF", "I: " + screen.i + ", X: " + screen.x, 0)
  rightLineNum++
  
  var aiColor = #CC0000
  var idleColor = #CC0000
  var pausedColor = #CC0000
  var walkColor = #CC0000
  var faceColor = #FF00FF
  
  >`@xStart@,@lineNum@,#00FF00,Location: @loc.name@ @loc.stars@*
  lineNum++
  ?pickup.distance < 9999
    >`@xStart@,@lineNum@,#00FF00,Pickup: @pickup@ (@pickup.distance@)
    lineNum++
  ?harvest.distance < 9999
    >`@xStart@,@lineNum@,#00FF00,Harvest: @harvest@ (@harvest.distance@)
    lineNum++
  
  ?foe.damage > -1
    lineNum = U.displayFoe(lineNum, xStart)
    >`@xStart@,@lineNum@,#DD0000,Lv@foe.level@ = @foe.distance@, Dmg: @foe.damage@, State: @foe.state@:@U.toSeconds(foe.time)@
    lineNum++
    >`@xStart@,@lineNum@,#DD0000,+ @foe.buffs.string@
    lineNum++
    >`@xStart@,@lineNum@,#009900,- @foe.debuffs.string@
    lineNum++
  
  lineNum++
  >`@xStart@,@lineNum@,#00FF00,+ @buffs.string@
  lineNum++
  >`@xStart@,@lineNum@,#FF0000,- @debuffs.string@
  lineNum++
  >`@xStart@,@lineNum@,#FF00FF,Sk @U.toSeconds(item.GetCooldown("skeleton_arm"))@
  >`@xStart + 8@,@lineNum@,#FF00FF,BF @U.toSeconds(item.GetCooldown("blade"))@
  >`@xStart + 16@,@lineNum@,#FF00FF,Bh @U.toSeconds(item.GetCooldown("bash"))@
  >`@xStart + 23@,@lineNum@,#FF00FF,M @U.toSeconds(item.GetCooldown("mind"))@
  lineNum++
  >`@xStart@,@lineNum@,#FF00FF, Q @U.toSeconds(item.GetCooldown("quarterstaff"))@
  >`@xStart + 8@,@lineNum@,#FF00FF,Bd @U.toSeconds(item.GetCooldown("bardiche"))@
  >`@xStart + 16@,@lineNum@,#FF00FF, H @U.toSeconds(item.GetCooldown("hammer"))@
  lineNum++
  
  ?ai.enabled
    aiColor = #00FF00
  :
    aiColor = #CC0000
  ?ai.idle
    idleColor = #00FF00
  :
    idleColor = #CC0000
  ?ai.paused
    pausedColor = #00FF00
  :
    pausedColor = #CC0000
  ?ai.walking
    walkColor = #00FF00
  :
    walkColor = #CC0000
  
  lineNum = 25
  var xStartPushed = 59 // xStart + 10
  >`@xStartPushed@,@lineNum@,@aiColor@,[AI]
  >`@xStartPushed + 5@,@lineNum@,@idleColor@,[Idle]
  >`@xStartPushed + 12@,@lineNum@,@pausedColor@,[Paused]
  >`@xStartPushed + 21@,@lineNum@,@walkColor@,[Walk]
  
  >`30,4,#FF00FF,
  >`30,5,#FF00FF,
  >`30,6,#FF00FF,
  
  
  
  lineNum = yStart

import Pets